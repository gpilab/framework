'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.GLES2 import _types as _cs
# End users want this...
from OpenGL.raw.GLES2._types import *
from OpenGL.raw.GLES2 import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'GLES2_OES_viewport_array'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.GLES2,'GLES2_OES_viewport_array',error_checker=_errors._error_checker)
GL_DEPTH_RANGE=_C('GL_DEPTH_RANGE',0x0B70)
GL_MAX_VIEWPORTS_OES=_C('GL_MAX_VIEWPORTS_OES',0x825B)
GL_SCISSOR_BOX=_C('GL_SCISSOR_BOX',0x0C10)
GL_SCISSOR_TEST=_C('GL_SCISSOR_TEST',0x0C11)
GL_VIEWPORT=_C('GL_VIEWPORT',0x0BA2)
GL_VIEWPORT_BOUNDS_RANGE_OES=_C('GL_VIEWPORT_BOUNDS_RANGE_OES',0x825D)
GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES=_C('GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES',0x825F)
GL_VIEWPORT_SUBPIXEL_BITS_OES=_C('GL_VIEWPORT_SUBPIXEL_BITS_OES',0x825C)
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLfloatArray)
def glDepthRangeArrayfvOES(first,count,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLfloat,_cs.GLfloat)
def glDepthRangeIndexedfOES(index,n,f):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glDisableiOES(target,index):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glEnableiOES(target,index):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint,arrays.GLfloatArray)
def glGetFloati_vOES(target,index,data):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLenum,_cs.GLuint)
def glIsEnablediOES(target,index):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLintArray)
def glScissorArrayvOES(first,count,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLsizei)
def glScissorIndexedOES(index,left,bottom,width,height):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLintArray)
def glScissorIndexedvOES(index,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLfloatArray)
def glViewportArrayvOES(first,count,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLfloat,_cs.GLfloat,_cs.GLfloat,_cs.GLfloat)
def glViewportIndexedfOES(index,x,y,w,h):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLfloatArray)
def glViewportIndexedfvOES(index,v):pass
